<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Product Management</title>

    <!-- Load React and Babel -->
    <script src="https://unpkg.com/react@18/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
</head>

<body>
    <h1>Product Management</h1>

    <div id="root"></div>

    <script type="text/babel">
        const { useState, useEffect } = React;

        const App = () => {
            const [products, setProducts] = useState([]);
            const [selectedProduct, setSelectedProduct] = useState(null);

            // ✅ Load data using useEffect
            useEffect(() => {
                fetch("/api/items")
                    .then(res => res.json())
                    .then(data => setProducts(data))
                    .catch(err => console.error("❌ Error loading products:", err));
            }, []);

            const handleSelect = (product) => {
                setSelectedProduct({ ...product });
            };

            const handleChange = (field, value) => {
                setSelectedProduct(prev => ({ ...prev, [field]: value }));
            };

            const handleSave = () => {
                fetch("/api/items", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify(selectedProduct),
                })
                .then(res => res.json())
                .then(() => {
                    alert("✅ Product saved!");
                    setProducts(prev => prev.map(p => p.id === selectedProduct.id ? selectedProduct : p));
                    setSelectedProduct(null);
                })
                .catch(err => console.error("❌ Error saving product:", err));
            };

            const handleDelete = () => {
                fetch(`/api/items/${selectedProduct.id}`, { method: "DELETE" })
                .then(res => res.json())
                .then(() => {
                    alert("✅ Product deleted!");
                    setProducts(prev => prev.filter(p => p.id !== selectedProduct.id));
                    setSelectedProduct(null);
                })
                .catch(err => console.error("❌ Error deleting product:", err));
            };

            return (
                <div style={{ display: "flex", gap: "30px" }}>
                    <div>
                        <h2>Product List</h2>
                        <ul>
                            {products.map((product) => (
                                <li key={product.id}>
                                    <button onClick={() => handleSelect(product)}>
                                        {product.name} - ${product.price}
                                    </button>
                                </li>
                            ))}
                        </ul>
                    </div>
                    <div>
                        <h2>Product Details</h2>
                        {selectedProduct ? (
                            <div>
                                <label>Name: <input type="text" value={selectedProduct.name} onChange={(e) => handleChange("name", e.target.value)} /></label>
                                <br />
                                <label>Price: <input type="number" value={selectedProduct.price} onChange={(e) => handleChange("price", e.target.value)} /></label>
                                <br />
                                <label>Year: <input type="number" value={selectedProduct.year} onChange={(e) => handleChange("year", e.target.value)} /></label>
                                <br />
                                <button onClick={handleSave}>Save</button>
                                <button onClick={handleDelete} style={{ marginLeft: "10px", backgroundColor: "red", color: "white" }}>Delete</button>
                            </div>
                        ) : (
                            <p>Select a product to edit.</p>
                        )}
                    </div>
                </div>
            );
        };

        ReactDOM.createRoot(document.getElementById("root")).render(<App />);
    </script>
</body>
</html>
